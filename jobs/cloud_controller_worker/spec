---
name: cloud_controller_worker

description: "Cloud Controller worker processes background tasks submitted via the."

templates:
  bpm.yml.erb: config/bpm.yml
  bin/cloud_controller_worker.erb: bin/cloud_controller_worker
  pre-backup-lock.sh.erb: bin/bbr/pre-backup-lock
  post-backup-unlock.sh.erb: bin/bbr/post-backup-unlock
  pre-restore-lock.sh.erb: bin/bbr/pre-restore-lock
  post-restore-unlock.sh.erb: bin/bbr/post-restore-unlock

  cloud_controller_ng.yml.erb: config/cloud_controller_ng.yml
  setup_local_blobstore.sh.erb: bin/setup_local_blobstore.sh
  newrelic.yml.erb: config/newrelic.yml
  drain.sh.erb: bin/drain
  stacks.yml.erb: config/stacks.yml
  ruby_version.sh.erb: bin/ruby_version.sh
  console.erb: bin/console
  blobstore_waiter.sh.erb: bin/blobstore_waiter.sh
  post-start.sh.erb: bin/post-start
  pre-start.sh.erb: bin/pre-start
  buildpacks_ca_cert.pem.erb: config/certs/buildpacks_ca_cert.pem
  droplets_ca_cert.pem.erb: config/certs/droplets_ca_cert.pem
  packages_ca_cert.pem.erb: config/certs/packages_ca_cert.pem
  resource_pool_ca_cert.pem.erb: config/certs/resource_pool_ca_cert.pem
  mutual_tls_ca.crt.erb: config/certs/mutual_tls_ca.crt
  mutual_tls.crt.erb: config/certs/mutual_tls.crt
  mutual_tls.key.erb: config/certs/mutual_tls.key
  uaa_ca.crt.erb: config/certs/uaa_ca.crt
  db_ca.crt.erb: config/certs/db_ca.crt

packages:
  - capi_utils
  - cloud_controller_ng
  - nginx
  - nginx_newrelic_plugin
  - libpq
  - jemalloc
  - mariadb_connector_c
  - ruby-3.2

consumes:
- name: database
  type: database
  optional: true
- name: credhub
  type: credhub
  optional: true
- name: cloud_controller_internal
  type: cloud_controller_internal
  optional: true
- name: file_server
  type: file_server
  optional: true

properties:
  ssl.skip_cert_verify:
    description: "specifies that the job is allowed to skip ssl cert verification"
    default: false

  system_domain:
    description: "Domain reserved for CF operator, base URL where the login, uaa, and other non-user apps listen"

  nfs_server.address:
    description: "NFS server for droplets and apps (not used in an AWS deploy, use s3 instead)"

  cc.external_port:
    description: "External Cloud Controller port"
    default: 9022
  cc.tls_port:
    description: "External Cloud Controller port"
    default: 9023
  cc.internal_service_hostname:
    description: "Internal hostname used to resolve the address of the Cloud Controller"
    default: "cloud-controller-ng.service.cf.internal"

  cc.readiness_port.cloud_controller_worker:
    description: "Readiness port used in k8s to check that db migrations are complete before component update"
    default: 9025

  cc.jobs.global.timeout_in_seconds:
    description: "The longest any job can take before it is cancelled unless overriden per job"
    default: 14400 # 4 hours
  cc.jobs.blobstore_delete.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"

  cc.external_protocol:
    default: "https"
    description: "The protocol used to access the CC API from an external entity"
  cc.external_host:
    default: "api"
    description: "Host part of the cloud_controller api URI, will be joined with value of 'domain'"

  cc.logging_level:
    default: "info"
    description: "Log level for cc. Valid levels are listed here: https://github.com/cloudfoundry/steno#log-levels."
  cc.logging_max_retries:
    default: 1
    description: "Passthru value for Steno logger"
  cc.log_db_queries:
    default: false
    description: "Log database queries. WARNING: Setting this to true with cc.db_logging_level >= cc.logging_level will log all field values, including encrypted secrets."
  cc.db_logging_level:
    default: "debug2"
    description: "Level at which cc database operations will be logged if cc.log_db_queries is set to true."
  cc.log_fog_requests:
    default: false
    description: "Log fog requests and responses."
  cc.log_audit_events:
    default: false
    description: "Log audit events"

  cc.staging_timeout_in_seconds:
    default: 900
    description: "Timeout for staging a droplet"
  cc.default_health_check_timeout:
    default: 60
    description: "Default health check timeout (in seconds) that can be set for the app"
  cc.maximum_health_check_timeout:
    default: 180
    description: "Maximum health check timeout (in seconds) that can be set for the app"
  cc.jobs.priorities:
    description: "List of hashes containing delayed jobs 'display_name' and its desired priority. This will overwrite the default priority of ccng"

  cc.staging_upload_user:
    description: "User name used to access internal endpoints of Cloud Controller to upload files when staging"
  cc.staging_upload_password:
    description: "User's password used to access internal endpoints of Cloud Controller to upload files when staging"

  cc.resource_pool.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.resource_pool.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.resource_pool.fog_gcp_storage_options:
    description: "Storage options passed to fog for gcp blobstores"
  cc.resource_pool.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.resource_pool.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.resource_pool.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.resource_pool.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.resource_pool.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.resource_pool.webdav_config.ca_cert:
    description: "The CA certificate to use when communicating with webdav"
    default: ""
  cc.resource_pool.minimum_size:
    description: "Minimum size of a resource to add to the pool"
    default: 65536
  cc.resource_pool.maximum_size:
    description: "Maximum size of a resource to add to the pool"
    default: 536870912
  cc.resource_pool.resource_directory_key:
    description: "Directory (bucket) used store app resources.  It does not have be pre-created."
    default: "cc-resources"
  cc.resource_pool.fog_connection:
    description: "Fog connection hash"
  cc.resource_pool.cdn.uri:
    description: "URI for a CDN to used for resource pool downloads"
    default: ""
  cc.resource_pool.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.resource_pool.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  cc.packages.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.packages.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.packages.fog_gcp_storage_options:
    description: "Storage options passed to fog for gcp blobstores"
  cc.packages.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.packages.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.packages.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.packages.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.packages.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.packages.webdav_config.ca_cert:
    description: "The CA certificate to use when communicating with webdav"
    default: ""
  cc.packages.app_package_directory_key:
    description: "Directory (bucket) used store app packages.  It does not have be pre-created."
    default: "cc-packages"
  cc.packages.max_package_size:
    description: "Maximum size of application package"
    default: 1073741824
  cc.packages.fog_connection:
    description: "Fog connection hash"
  cc.packages.cdn.uri:
    description: "URI for a CDN to used for app package downloads"
    default: ""
  cc.packages.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.packages.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  cc.droplets.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.droplets.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.droplets.fog_gcp_storage_options:
    description: "Storage options passed to fog for gcp blobstores"
  cc.droplets.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.droplets.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.droplets.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.droplets.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.droplets.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.droplets.webdav_config.ca_cert:
    description: "The CA certificate to use when communicating with webdav"
    default: ""
  cc.droplets.droplet_directory_key:
    description: "Directory (bucket) used store droplets.  It does not have be pre-created."
    default: "cc-droplets"
  cc.droplets.fog_connection:
    description: "Fog connection hash"
  cc.droplets.cdn.uri:
    description: "URI for a CDN to used for droplet downloads"
    default: ""
  cc.droplets.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.droplets.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  cc.buildpacks.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.buildpacks.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.buildpacks.fog_gcp_storage_options:
    description: "Storage options passed to fog for gcp blobstores"
  cc.buildpacks.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.buildpacks.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.buildpacks.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.buildpacks.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.buildpacks.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.buildpacks.webdav_config.ca_cert:
    description: "The CA certificate to use when communicating with webdav"
    default: ""
  cc.buildpacks.buildpack_directory_key:
    description: "Directory (bucket) used store buildpacks.  It does not have be pre-created."
    default: "cc-buildpacks"
  cc.buildpacks.fog_connection:
    description: "Fog connection hash"
  cc.buildpacks.cdn.uri:
    description: "URI for a CDN to used for buildpack downloads"
    default: ""
  cc.buildpacks.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.buildpacks.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  ccdb.databases:
    description: "Contains the name of the database on the database server"
  ccdb.roles:
    description: "Users to create on the database when seeding"
  ccdb.db_scheme:
    description: "The type of database being used. mysql or postgres"
    default: postgres
  ccdb.address:
    description: "The address of the database server"
  ccdb.port:
    description: "The port of the database server"
  ccdb.max_connections:
    default: 25
    description: "Maximum connections for Sequel"
  ccdb.pool_timeout:
    default: 10
    description: "The timeout for Sequel pooled connections"
  ccdb.ca_cert:
    default: ~
    description: "The CA certificate to use when communicating with the database over SSL"
  ccdb.ssl_verify_hostname:
    default: true
    description: "Verify that the database SSL certificate matches the host to which the connection is attempted"
  ccdb.read_timeout:
    default: 3600
    description: "The read timeout in seconds for query responses, passed directly to the Sequel gem - see https://github.com/jeremyevans/sequel/blob/master/doc/opening_databases.rdoc for details"
  ccdb.connection_validation_timeout:
    default: 3600
    description: "The period in seconds after which idle connections are validated, passed directly to the Sequel gem - see http://sequel.jeremyevans.net/rdoc-plugins/files/lib/sequel/extensions/connection_validator_rb.html for details.  Note that setting this to -1 results in an additional query whenever connections are checked out from the pool, which can have performance implications"
  ccdb.max_migration_duration_in_minutes:
    description: "the maximum time migrations should be allowed to run before job startup should error"
    default: 20160
  cc.db_encryption_key:
    default: ""
    description: "key for encrypting sensitive values in the CC database"
  ccdb.connection_expiration_timeout:
    description: "The period in seconds after which connections are expired (omit to never expire connections), passed directly to the Sequel gem - see https://sequel.jeremyevans.net/rdoc-plugins/files/lib/sequel/extensions/connection_expiration_rb.html for details"
  ccdb.connection_expiration_random_delay:
    description: "The random delay in seconds to the expiration timeout (to prevent all connections being recreated simultaneously), passed directly to the Sequel gem - see https://sequel.jeremyevans.net/rdoc-plugins/files/lib/sequel/extensions/connection_expiration_rb.html for details"

  cc.database_encryption.keys:
    default: {}
    description: "label-key pairs for encrypting sensitive values in the CC database, labels must be < 256 characters long"
  cc.database_encryption.current_key_label:
    default: ""
    description: "current key label for encrypting values in the CC database"

  cc.default_app_memory:
    default: 1024
    description: "How much memory given to an app if not specified"
  cc.default_app_disk_in_mb:
    default: 1024
    description: "The default disk space an app gets"
  cc.maximum_app_disk_in_mb:
    default: 2048
    description: "The maximum amount of disk a user can request"

  cc.allow_app_ssh_access:
    default: true
    description: "Allow users to change the value of the app-level allow_ssh attribute"
  cc.default_app_ssh_access:
    default: true
    description: "When ssh is allowed and not explicitly set in the application, new applications will start with ssh service enabled"

  uaa.ssl.port:
    description: "The port used by UAA for ssl connections"
    default: 8443
  uaa.port:
    description: "The port used by UAA for non-ssl connections"
  cc.uaa.internal_url:
    description: "The internal URL used by UAA"
    default: "uaa.service.cf.internal"
  uaa.ca_cert:
    description: "The certificate authority being used by UAA"

  metron_endpoint.host:
    description: "The host used to emit messages to the Metron agent"
    default: "127.0.0.1"
  metron_endpoint.port:
    description: "The port used to emit messages to the Metron agent"
    default: 3457

  cc.broker_client_timeout_seconds:
    default: 60
    description: "For requests to service brokers, this is the HTTP (open and read) timeout setting."

  cc.development_mode:
    default: false
    description: "Enable development features for monitoring and insight"

  cc.newrelic.license_key:
    default: ~
    description: "The api key for NewRelic"
  cc.newrelic.environment_name:
    default: "development"
    description: "The environment name used by NewRelic"
  cc.newrelic.developer_mode:
    default: false
    description: "Activate NewRelic developer mode"
  cc.newrelic.monitor_mode:
    default: false
    description: "Activate NewRelic monitor mode"
  cc.newrelic.log_file_path:
    default: "/var/vcap/sys/log/cloud_controller_ng/newrelic"
    description: "The location for NewRelic to log to"
  cc.newrelic.capture_params:
    default: false
    description: "Capture and send query params to NewRelic"
  cc.newrelic.transaction_tracer.enabled:
    default: false
    description: "Enable transaction tracing in NewRelic"
  cc.newrelic.transaction_tracer.record_sql:
    default: "off"
    description: "NewRelic's SQL statement recording mode: [off | obfuscated | raw]"

  cc.jobs.generic.number_of_workers:
    default: 1
    description: "Number of generic cloud_controller_worker workers"
  cc.jobs.generic.number_of_threads:
    default: 0
    description: "Number of threads per generic cloud_controller_worker worker. 0 means that no threads are used."

  uaa.clients.cc-service-dashboards.secret:
    description: "Used for generating SSO clients for service brokers."
  uaa.clients.cc-service-dashboards.scope:
    description: "Used to grant scope for SSO clients for service brokers"
    default: "openid,cloud_controller_service_permissions.read"
  uaa.clients.cc_routing.secret:
    description: "Used for fetching routing information from the Routing API"

  routing_api.enabled:
    description: "Whether to expose the routing_endpoint listed at /v2/info. Enable this after deploying the Routing API"
    default: false

  cc.instance_file_descriptor_limit:
    description: "The file descriptors made available to each app instance"
    default: 16384

  cc.default_app_log_rate_limit_in_bytes_per_second:
    default: -1
    description: "Default application log rate limit"

  cc.thresholds.worker.alert_if_above_mb:
    description: "The CC will alert if memory remains above this threshold for 3 monit cycles"
    default: 384
  cc.thresholds.worker.restart_if_consistently_above_mb:
    description: "The CC will restart if memory remains above this threshold for 15 monit cycles"
    default: 384
  cc.thresholds.worker.restart_if_above_mb:
    description: "The CC will restart if memory remains above this threshold for 3 monit cycles"
    default: 512

  cc.disable_custom_buildpacks:
    default: false
    description: "Disable external (i.e. git) buildpacks? (Admin buildpacks and system buildpacks only.)"

  cc.broker_client_default_async_poll_interval_seconds:
    default: 60
    description: "Specifies interval on which the CC will poll a service broker for asynchronous actions"

  cc.broker_client_max_async_poll_duration_minutes:
    default: 10080
    description: "The max duration the CC will fetch service instance state from a service broker. Default is 1 week"

  cc.broker_client_async_poll_exponential_backoff_rate:
    default: 1.0
    description: "Exponential backoff for service related polling jobs. Default is 1.0, which means there is no exponential backoff."

  cc.broker_client_response_parser.log_errors:
    default: false
    description: "Log errors happening when parsing service broker responses."
  cc.broker_client_response_parser.log_validators:
    default: false
    description: "Log the stack of validators used to process the service broker response, e.g. for a 202 response to a 'provision' request, the following is logged: [\"CommonErrorValidator\", \"JsonSchemaValidator[provision_response_schema]\", \"SuccessValidator[in progress]\"]"
  cc.broker_client_response_parser.log_response_fields:
    default: {}
    description: "Specify service broker response fields to be logged. This configuration is a hash, where the key indicates the request type and the value is a list of fields in the response JSON that should be logged. The following request types exist: catalog, provision, update, deprovision, bind, unbind, fetch_service_instance_last_operation, fetch_service_binding_last_operation, fetch_service_instance, fetch_service_binding. The corresponding response fields can be taken from the Open Service Broker API Specification."

  cc.diego.bbs.url:
    description: "URL of the BBS Server"
    default: https://bbs.service.cf.internal:8889
  cc.diego.bbs.connect_timeout:
    description: "Connect timeout (in seconds) when talking to BBS Server"
    default: 10
  cc.diego.bbs.send_timeout:
    description: "Send timeout (in seconds) when talking to BBS Server"
    default: 10
  cc.diego.bbs.receive_timeout:
    description: "Receive timeout (in seconds) when talking to BBS Server"
    default: 10

  cc.mutual_tls.ca_cert:
    description: "PEM-encoded CA certificate for secure, mutually authenticated TLS communication"
  cc.mutual_tls.public_cert:
    description: "PEM-encoded certificate for secure, mutually authenticated TLS communication"
  cc.mutual_tls.private_key:
    description: "PEM-encoded key for secure, mutually authenticated TLS communication"

  cc.diego.file_server_url:
    description: "URL of file server"
    default: http://file-server.service.cf.internal:8080
  cc.diego.cc_uploader_url:
    description: "URL of cc uploader"
    default: http://cc-uploader.service.cf.internal:9090
  cc.diego.use_privileged_containers_for_running:
    description: "Whether or not to use privileged containers for running buildpack apps and tasks."
    default: false
  cc.diego.use_privileged_containers_for_staging:
    description: "Whether or not to use privileged containers for staging tasks."
    default: false
  cc.diego.lifecycle_bundles:
    description: "List of lifecycle bundles arguments for different stacks"
    default:
      "buildpack/cflinuxfs4": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
      "buildpack/windows": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
      "buildpack/windows2012R2": "windows_app_lifecycle/windows_app_lifecycle.tgz"
      "buildpack/windows2016": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
      "docker": "docker_app_lifecycle/docker_app_lifecycle.tgz"
  cc.diego.droplet_destinations:
    description: "List of destination directories for different stacks"
    default:
      "cflinuxfs4": "/home/vcap"
      "windows": "/Users/vcap"
      "windows2012R2": "/"
      "windows2016": "/Users/vcap"
  cc.diego.temporary_oci_buildpack_mode:
    description: "Temporary flag to enable OCI buildpack flow. Valid values: 'oci-phase-1'"
    default: ~
  cc.diego.enable_declarative_asset_downloads:
    description: "Enable specifying task and app asset downloads as declarative resources"
    default: false
  cc.diego.pid_limit:
    description: "Maximum PID limit for containerized work running user-provided code"
    default: 1024

  cc.internal_route_vip_range:
    default: "127.128.0.0/9"
    description: "The IPv4 CIDR range of virtual IP addresses to be assigned to routes on internal domains.
                  WARNING: Changing this range is not supported, and has undefined behaviors.
                  It is recommended to leave this value as the default.
                  If this range is changed, it is likely the routes on the internal service mesh domain
                  will need to be recreated."

  cc.loggregator.internal_url:
    description: "Internal URL used to communicate with traffic_controller"
    default: "http://loggregator-trafficcontroller.service.cf.internal:8081"

  cc.perform_blob_cleanup:
    description: "Whether or not to perform the blob cleanup job"
    default: true

  credhub_api.hostname:
    description: "Hostname used to resolve the address of CredHub"
    default: "credhub.service.cf.internal"

  release_level_backup:
    default: true
    description: "Include cloud_controller jobs in backup and restore operations"

  cc.credential_references.interpolate_service_bindings:
    description: "Controls whether CredHub credentials are automatically interpolated in VCAP_SERVICES"
    default: true

  cc.max_manifest_service_binding_poll_duration_in_seconds:
    description: "Max time in seconds to wait for individual asynchronous service binding creation
                  when applying manifests.  If a service broker fails to complete a service binding request
                  before the specified duration, the manifest job will fail."
    default: 60

